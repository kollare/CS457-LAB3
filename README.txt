CS457LAB3 Ð READMESpecificationsYou may write this program in C, or C++. Other languages may be allowed by request. You may not use any non-standard libraries without prior permission. Your program must work on the computers in the Datacomm lab. You may program it wherever you like, but must demo it in the Datacomm lab, between multiple lab computers.Your assignment is to write both the server and client parts of a chat program. You must use TCP sockets. You must support the following functionality:¥ The server should allow for multiple simultaneous clients (you will likely need to use threads for this).¥ The server should provide a way for the clients to get a list of all other connected clients.¥ The server should support both clients sending to individual other clients, and clients sending to all other online users simultaneously.¥ The server should support administrative commands (sent from a client). At minimum, you should implement a command to kick off another user. It is up to you how these will be distinguished from text.¥ The client should provide a front end to access all functionality the server supports. Therefore it must be able to request a list of the IDs of all other connected clients, send messages to other individual users, and send broadcast messages to all users.¥ The server should support some other interesting functionality. One option is groups, where clients can join groups tracked by the server, and messages can be sent to all clients in a group. Another option is the ability to send files to other users. You are not limited to the listed options.As in the previous project, please create a 2 - 4 page document describing your design. Also, please fill out group-evaluation forms.Grading: There will be a total of 100 points, divided as follows:CriteriaPointsCode compiles without error5Proper runtime error handling5TCP socket connection established10Multiple client connections10Broadcast message (to all clients)10Individual message10Client list5Admin functions5Extra interesting function10Group evaluation10Good design/coding style10Good documentation10